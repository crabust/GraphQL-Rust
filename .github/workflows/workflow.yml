name: GraphQL Rust Demo CI/CD pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # todo maybe run tests inside docker container (change Dockerfile for that). Now it is not supported by testcontainers (https://github.com/testcontainers/testcontainers-rs/issues/129)
  test-rust-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  auth-service-image:
    needs: test-rust-services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1.1.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: kudryashovroman/graphql-rust
          path: .
          dockerfile: ./auth-service/Dockerfile
          tags: auth-service
          push: ${{ github.event_name == 'push' }}

  planets-service-image:
    needs: test-rust-services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1.1.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: kudryashovroman/graphql-rust
          path: .
          dockerfile: ./planets-service/Dockerfile
          tags: planets-service
          push: ${{ github.event_name == 'push' }}

  satellites-service-image:
    needs: test-rust-services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1.1.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: kudryashovroman/graphql-rust
          path: .
          dockerfile: ./satellites-service/Dockerfile
          tags: satellites-service
          push: ${{ github.event_name == 'push' }}

  apollo-server-image:
    needs: test-rust-services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1.1.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: kudryashovroman/graphql-rust
          path: ./apollo-server
          dockerfile: ./apollo-server/Dockerfile
          tags: apollo-server
          push: ${{ github.event_name == 'push' }}

  deploy:
    if: ${{ github.event_name == 'push' }}
    needs: [ auth-service-image, planets-service-image, satellites-service-image, apollo-server-image ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '319.0.0'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}

      - run: |-
          gcloud config set compute/zone ${{ secrets.GCE_INSTANCE_ZONE }}

      - run: |-
          gcloud compute instances delete --quiet ${{ secrets.GCE_INSTANCE }}

      - run: |-
          gcloud compute instances create ${{ secrets.GCE_INSTANCE }} --image cos-85-13310-1041-28 --image-project cos-cloud --machine-type e2-small --address my-static-ip

      - run: |-
          gcloud compute scp --quiet ./docker-compose.yml ./docker-compose.prod.yml ./.env ./.github/deploy.sh ${{ secrets.GCE_INSTANCE }}:~

      - run: |-
          gcloud compute ssh ${{ secrets.GCE_INSTANCE }} --command 'bash deploy.sh'
